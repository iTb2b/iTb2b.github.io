<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://iTb2b.github.io</id>
    <title>Tao Cheung‘s Blog</title>
    <updated>2021-08-11T09:09:15.041Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://iTb2b.github.io"/>
    <link rel="self" href="https://iTb2b.github.io/atom.xml"/>
    <subtitle>The living still have many choices, and the dead only die. </subtitle>
    <logo>https://iTb2b.github.io/images/avatar.png</logo>
    <icon>https://iTb2b.github.io/favicon.ico</icon>
    <rights>All rights reserved 2021, Tao Cheung‘s Blog</rights>
    <entry>
        <title type="html"><![CDATA[闲言碎语]]></title>
        <id>https://iTb2b.github.io/post/xian-yan-sui-yu/</id>
        <link href="https://iTb2b.github.io/post/xian-yan-sui-yu/">
        </link>
        <updated>2021-08-11T09:07:00.000Z</updated>
        <content type="html"><![CDATA[<p>在折腾的过程中，能忘记时间、忘记疲劳，只是在过程之后，会陷入一阵空虚。<br>
大概，还是没有想做的事情吧，或者，是自己没有迈出最初的一步。😢</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[冷萃]]></title>
        <id>https://iTb2b.github.io/post/leng-cui/</id>
        <link href="https://iTb2b.github.io/post/leng-cui/">
        </link>
        <updated>2020-06-19T14:12:25.000Z</updated>
        <content type="html"><![CDATA[<p>618 之前买了冷萃的套装，最近每天早上喝一杯。<br>
每天下午亮点，把赠送的梅森杯洗干净，撕开包装袋，再约莫倒个七八分的水，太多容易淡。随后放入冰箱，第二天早上取出，插入吸管，猛吸一口。<br>
淡淡的苦味和微弱的酸席卷了我的脑门儿，舒坦～<br>
相比于普通挂耳来说，这种更加方便快捷，扔进去啥都不用管，第二天拿出来喝就是，而且也能加奶，方便调制各种风味。<br>
<img src="https://tva1.sinaimg.cn/large/007S8ZIlly1gfxyld3ypxj30u00u07wh.jpg" alt="冷萃" loading="lazy"><br>
味道比挂耳淡了不少，新手也能很快适应。</p>
<p>附送的<strong>花魁</strong>，与其说是花香不如说是果香，可能是我的冲泡方式有问题，那种香味仅仅是很淡很淡，几乎快感觉不到了。像喝蓝山一样，得第二口才能喝出来。<br>
人说咖啡提神，我在刚喝了一口之后，大大地打了个哈欠，可能是习惯了吧，最近也不拉肚子了。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[这 TM 是什么奇淫技巧！！]]></title>
        <id>https://iTb2b.github.io/post/zhe-tm-shi-shi-me-qi-yin-ji-qiao/</id>
        <link href="https://iTb2b.github.io/post/zhe-tm-shi-shi-me-qi-yin-ji-qiao/">
        </link>
        <updated>2020-05-23T14:36:11.000Z</updated>
        <content type="html"><![CDATA[<p>思路来源于<a href="https://www.zhihu.com/question/38192507/answer/400900391">知乎</a></p>
<p>当想 clone 一个项目但无奈受限于中间隔了一个太平洋时，或者是没有梯子时。<br>
使用 <a href="https://gitee.com">gitee</a>。</p>
<ol>
<li>新建项目</li>
<li>从 GitHub 中导入已有项目</li>
<li>复制 .git 地址</li>
<li>导入等待同步</li>
<li>获取 gitee 的 .git 地址</li>
<li>git clone</li>
</ol>
<p>完全可行！！！！<br>
这 TM 是什么鬼才啊！！！！</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[macOS 如何在合上盖子的时候保持不进入睡眠？]]></title>
        <id>https://iTb2b.github.io/post/macos-ru-he-zai-he-shang-gai-zi-de-shi-hou-bao-chi-bu-jin-ru-shui-mian/</id>
        <link href="https://iTb2b.github.io/post/macos-ru-he-zai-he-shang-gai-zi-de-shi-hou-bao-chi-bu-jin-ru-shui-mian/">
        </link>
        <updated>2020-05-19T12:14:29.000Z</updated>
        <content type="html"><![CDATA[<h1 id="macos-如何在合上盖子的时候保持不进入睡眠">macOS 如何在合上盖子的时候保持不进入睡眠？</h1>
<p>给它喝咖啡（注射咖啡因）</p>
<p>在终端当中输入</p>
<pre><code class="language-text">caffeinate -t 3600
</code></pre>
<p>就可以让它保持一小时清醒。（3600）秒。</p>
<p>或者，先输入</p>
<pre><code class="language-text">ps uxa
</code></pre>
<p>查看需要保持运行的进程的进程号，然后</p>
<pre><code class="language-text">caffeinate -w &lt;进程号&gt;
</code></pre>
<p>就可以等待到这个进程结束。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[如何用 Markdown 写论文？]]></title>
        <id>https://iTb2b.github.io/post/ru-he-yong-markdown-xie-lun-wen/</id>
        <link href="https://iTb2b.github.io/post/ru-he-yong-markdown-xie-lun-wen/">
        </link>
        <updated>2020-05-18T01:35:09.000Z</updated>
        <content type="html"><![CDATA[<h1 id="如何用-markdown-写论文">如何用 Markdown 写论文？</h1>
<p><a href="https://sspai.com/u/a5xddvxl/updates">玉树芝兰</a></p>
<p>本文用简明的样例，介绍如何使用Markdown和自动化工具帮你处理数学公式、参考文献引用、图片交叉索引等学术论文写作中常见的棘手问题。快来试试吧。</p>
<figure data-type="image" tabindex="1"><img src="https://i.loli.net/2019/01/19/5c41faee28d5a.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt="img" loading="lazy"></figure>
<h1 id="苦恼">苦恼</h1>
<p>自从我学会了如何在数字文档上用红笔写写画画，跟学生合写文章和指导毕业论文的工作就变得轻松多了。</p>
<figure data-type="image" tabindex="2"><img src="https://i.loli.net/2019/01/19/5c41faf19f1fd.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt="img" loading="lazy"></figure>
<p>有的部分，学生会很快改完反馈给我。但是我发现每次对引言和文献综述部分做出调整要求，学生们的反馈都非常慢。</p>
<p>有的时候，学生甚至会求饶，“老师，参考文献顺序能不能不动？或者全文都确定下来再统一做？每次调整一个，就需要很长时间！”</p>
<p>我一时惊愕，为什么需要那么久？</p>
<p>后来才明白，他们居然是在word中一条条<strong>手动插入</strong>尾注，来引用参考文献的。尾注的内容有的直接搬过来，有的手动输入，结果参考文献列表的格式“丰富多彩”——有的信息不全，有的格式根本就不符合GB/T 7714-2015的规范。</p>
<p>在我的帮助下，许多学生学会了使用NoteExpress, Endnote, Zotero和Mendeley等工具，用自动化方式管理和引用参考文献。</p>
<p>但即便是这样，效率依然不够高。尤其是跟别人协作的时候，参考文献引用的修改就成了噩梦。</p>
<p>你可能需要每次都把Mendeley或者Zotero的文献库同步给对方，否则自动生成的引用标记就容易乱掉。</p>
<p>写作学术论文时，你还不得不时常面对图表交叉引用、数学公式和脚注等问题。如果方法不当，会把宝贵的时间和注意力耗散掉，劳而无功。</p>
<p>Word编辑器用来写学术论文，可能真的<strong>并不是最优</strong>方案。</p>
<p>但是没办法，国内学术界，尤其是人文社科领域，目前投稿模板还主要是Word的。</p>
<p>好消息是，即便是形成Word文稿，效率也是可挖掘的。</p>
<p>我平时写作学术论文的时候，用的依然是让人喜欢的标记语言——Markdown。对，你没听错，它不光可以帮你写公众号、做幻灯，也可以写论文哦。</p>
<p>通过本文，我把自己用Markdown写作学术论文的流程分享给你。希望看过之后，能帮助你提升效率，带来更多愉悦的写作体验。</p>
<h1 id="方案">方案</h1>
<p>我的方案，是采用Markdown来写作内容。然后用文档格式处理界的瑞士军刀Pandoc，把内容转换成Word格式。</p>
<p>Pandoc实在是<strong>黑科技</strong>。我曾经用它给你演示了<a href="http://www.jianshu.com/p/f274cad20914">如何把思维导图秒变成幻灯</a>。还记得其中这张图吗？</p>
<figure data-type="image" tabindex="3"><img src="https://i.loli.net/2019/01/19/5c41faf40e9d4.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt="img" loading="lazy"></figure>
<p>图中每一个节点，都是Pandoc支持的一种文档格式。Markdown, Docx, PDF, LaTeX, ePub, HTML …… 基本上涵盖了我们常见的发布格式需求。</p>
<p>一次写作，多种格式发布。听起来是不是很兴奋呢？</p>
<p>要使用这一方案，我们需要安装一些必要的工具。这就开始吧。</p>
<h1 id="环境">环境</h1>
<p>我们需要安装以下几样东西：</p>
<ul>
<li>Python 运行环境；</li>
<li>Pandoc；</li>
<li>Atom编辑器；</li>
<li>样例文件夹。</li>
</ul>
<p>下面我们一一介绍安装方法和注意事项。</p>
<h2 id="python环境">Python环境</h2>
<p>我们的演示中，需要用到pip等Python环境工具。最简便的方法是安装Anaconda套装，这样就不必对各种组件一一手动调整安装了。</p>
<p>请到<a href="https://www.continuum.io/downloads">这个网址</a> 下载最新版的Anaconda。下拉页面，找到下载位置。根据你目前使用的系统，网站会自动推荐给你适合的版本下载。我使用的是macOS，下载文件格式为pkg。</p>
<figure data-type="image" tabindex="4"><img src="https://i.loli.net/2019/01/19/5c41faf6e0283.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt="img" loading="lazy"></figure>
<p>下载页面区左侧是Python 3.6版，右侧是2.7版。请选择2.7版本。</p>
<p>双击下载后的pkg文件，根据中文提示一步步安装即可。</p>
<figure data-type="image" tabindex="5"><img src="https://i.loli.net/2019/01/19/5c41faf9548eb.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt="img" loading="lazy"></figure>
<h2 id="pandoc">Pandoc</h2>
<p>请到<a href="https://github.com/jgm/pandoc/releases/tag/1.19.2.1">这个网址</a>下载Pandoc。</p>
<figure data-type="image" tabindex="6"><img src="https://i.loli.net/2019/01/19/5c41fafc13a01.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt="img" loading="lazy"></figure>
<p>根据你的操作系统，下载对应的版本。我在macOS下，需要下载其中的<a href="https://github.com/jgm/pandoc/releases/download/1.19.2.1/pandoc-1.19.2.1-osx.pkg">pkg扩展名安装包</a>，双击安装。</p>
<p>为了处理图形的交叉引用，我们需要添加一个pandoc插件。</p>
<p>在终端（macOS, Linux）或者命令行（Windows）下，执行：</p>
<pre><code>pip install pandoc-fignos
</code></pre>
<p>正常安装后，pandoc就算准备好了。</p>
<h2 id="atom编辑器">Atom编辑器</h2>
<p>请到<a href="https://atom.io/">这个地址</a>下载Atom编辑器。网站会根据你的操作系统，自动找到对应的版本供你下载。</p>
<figure data-type="image" tabindex="7"><img src="https://i.loli.net/2019/01/19/5c41fb000f94e.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt="img" loading="lazy"></figure>
<p>因为我用的是macOS，所以这里网站提供的是苹果版本Atom。</p>
<p>下载之后，安装运行。然后你需要安装1个插件，帮你预览Markdown，叫做<a href="https://atom.io/packages/markdown-preview-enhanced">markdown-preview-enhanced</a>。</p>
<p>安装方法如下：</p>
<p>使用<code>Cmd + ,</code>呼叫配置菜单。注意我这里说的是苹果系统macOS上的操作。如果你用的是Windows，请把所有出现的Cmd按键替换为Ctrl按键，或者查阅帮助文档。</p>
<figure data-type="image" tabindex="8"><img src="https://i.loli.net/2019/01/19/5c41fb0332614.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt="img" loading="lazy"></figure>
<p>选择左侧边栏的最后一项+号，用于安装新的插件。</p>
<figure data-type="image" tabindex="9"><img src="https://i.loli.net/2019/01/19/5c41fb062e83e.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt="img" loading="lazy"></figure>
<p>在搜索框中输入该插件的名字：<code>markdown-preview-enhanced</code>，点击搜索结果中该插件的Install按钮。</p>
<p>很快，插件安装好了。</p>
<figure data-type="image" tabindex="10"><img src="https://i.loli.net/2019/01/19/5c41fb087a986.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt="img" loading="lazy"></figure>
<p>这样，我们就可以实时查看Markdown的预览效果了。</p>
<h2 id="样例文件夹">样例文件夹</h2>
<p>我专门为这篇教程，准备了一个github项目。</p>
<p>请从<a href="https://github.com/wshuyi/demo-scholar-markdown-docx/archive/master.zip">这个位置</a>，下载压缩包，之后解压。</p>
<figure data-type="image" tabindex="11"><img src="https://i.loli.net/2019/01/19/5c41fb18b9305.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt="img" loading="lazy"></figure>
<p>把其中的demo.md文件拖动到Atom编辑器中，就可以正式开始我们的探索之旅了。</p>
<h1 id="基础版本">基础版本</h1>
<p>Atom编辑器里，demo.md文件显示如下。</p>
<figure data-type="image" tabindex="12"><img src="https://i.loli.net/2019/01/19/5c41fb1af2b7c.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt="img" loading="lazy"></figure>
<p>左侧是Markdown源代码，对应的预览效果在右侧显示。</p>
<p>这里我们只包含了最简单的文本和图片。图片在我们刚刚下载文件夹的<code>/assets</code>子目录中。</p>
<p>到终端下，采用cd命令进入咱们的演示文件夹（我的在<code>~/Downloads/demo-scholar-markdown-docx-master</code>），执行：</p>
<pre><code>pandoc demo.md -o demo.docx
</code></pre>
<p>可以看到，当前文件夹下，生成了demo.docx文件。</p>
<p>打开Word文件，内容是这样的：</p>
<figure data-type="image" tabindex="13"><img src="https://i.loli.net/2019/01/19/5c41fb1d1b8bb.jpg?imageView2/2/w/1120/q/40/interlace/1/ignore-error/1" alt="img" loading="lazy"></figure>
<p>基础版本的格式转换，就是这么简单。下面我们就要添加一些内容，让文稿变得愈加有学术色彩。</p>
<h1 id="数学公式">数学公式</h1>
<p>我们尝试插入数学公式。</p>
<p>在Markdown下，可以直接使用LaTeX数学公式。你只需要负责键入符号，Pandoc负责将其转换成漂亮的公式显示在Word中。</p>
<p>如果你对LaTeX数学公式的输入不是很熟悉，不要紧，<a href="https://reu.dimacs.rutgers.edu/Symbols.pdf">这里有个小抄</a>（cheatsheet），你可以参考。</p>
<p>我们打开demo-math.md，可以看到这次除了刚刚的内容，还增加了一个新的部分，叫做“数学公式”。</p>
<p>内含一个经典物理学公式，还有相应的变量解释。</p>
<figure data-type="image" tabindex="14"><img src="https://i.loli.net/2019/01/19/5c41fb1f39ef8.jpg?imageView2/2/w/1120/q/40/interlace/1/ignore-error/1" alt="img" loading="lazy"></figure>
<p>在右侧预览区里面，我们看到了公式预览的效果。</p>
<p>回到终端下执行：</p>
<pre><code>pandoc demo-math.md -o demo-math.docx
</code></pre>
<p>这次生成的docx文件如下图所示：</p>
<figure data-type="image" tabindex="15"><img src="https://i.loli.net/2019/01/19/5c41fb21a5f35.jpg?imageView2/2/w/1120/q/40/interlace/1/ignore-error/1" alt="img" loading="lazy"></figure>
<p>转换后的word文件里，不论是独立公式，还是行内数学符号，都显示正常。</p>
<h1 id="脚注">脚注</h1>
<p>写学术论文的时候，经常需要加入脚注。例如在首页需要添加作者和基金支持信息之类。咱们也尝试在本部分加入对应内容。</p>
<p>打开<code>demo-footnote.md</code>，对比一下添加了哪些信息。</p>
<figure data-type="image" tabindex="16"><img src="https://i.loli.net/2019/01/19/5c41fb240907c.jpg?imageView2/2/w/1120/q/40/interlace/1/ignore-error/1" alt="img" loading="lazy"></figure>
<p>脚注用<code>[^1]</code>来表示。内容用同样的符号，后接冒号，然后填写具体信息。</p>
<p>这次的预览中，我们看到了脚注的标注，但是脚注内容哪儿去了？</p>
<p>别担心，拖拽右侧的预览窗口，我们就能看到脚注了。</p>
<figure data-type="image" tabindex="17"><img src="https://i.loli.net/2019/01/19/5c41fb265c770.jpg?imageView2/2/w/1120/q/40/interlace/1/ignore-error/1" alt="img" loading="lazy"></figure>
<p>但是转换成word后，这脚注还在第一页吗？</p>
<p>我们到终端下，执行pandoc命令：</p>
<pre><code>pandoc demo-footnote.md -o demo-footnote.docx
</code></pre>
<figure data-type="image" tabindex="18"><img src="https://i.loli.net/2019/01/19/5c41fb2881736.jpg?imageView2/2/w/1120/q/40/interlace/1/ignore-error/1" alt="img" loading="lazy"></figure>
<p>脚注如同我们需要的那样，显示在了首页底部。本部分测试成功。</p>
<h1 id="文献引用">文献引用</h1>
<p>下面我们进入关键阶段——文献引用了。</p>
<p>我们打开百度学术，找几篇跟大数据特性相关的文献。</p>
<figure data-type="image" tabindex="19"><img src="https://i.loli.net/2019/01/19/5c41fb2b588f1.png?imageView2/2/w/1120/q/40/interlace/1/ignore-error/1" alt="img" loading="lazy"></figure>
<p>键入检索主题词“大数据+3V+5V”，搜索后的结果如下：</p>
<figure data-type="image" tabindex="20"><img src="https://i.loli.net/2019/01/19/5c41fb2ea9e54.png?imageView2/2/w/1120/q/40/interlace/1/ignore-error/1" alt="img" loading="lazy"></figure>
<p>点开第一篇，我们看看内容。</p>
<figure data-type="image" tabindex="21"><img src="https://i.loli.net/2019/01/19/5c41fb3f2557e.png?imageView2/2/w/1120/q/40/interlace/1/ignore-error/1" alt="img" loading="lazy"></figure>
<p>页面下方有全文链接，我们选择知网。</p>
<figure data-type="image" tabindex="22"><img src="https://i.loli.net/2019/01/19/5c41fb425051c.png?imageView2/2/w/1120/q/40/interlace/1/ignore-error/1" alt="img" loading="lazy"></figure>
<p>点击PDF下载，查看全文。其中包含以下内容，跟咱们这篇文稿的主题相关。</p>
<figure data-type="image" tabindex="23"><img src="https://i.loli.net/2019/01/19/5c41fb44c847b.jpg?imageView2/2/w/1120/q/40/interlace/1/ignore-error/1" alt="img" loading="lazy"></figure>
<p>我们决定引用这篇参考文献。</p>
<p>回到百度学术的页面，点击引用按钮。</p>
<figure data-type="image" tabindex="24"><img src="https://i.loli.net/2019/01/19/5c41fb4810bd3.png?imageView2/2/w/1120/q/40/interlace/1/ignore-error/1" alt="img" loading="lazy"></figure>
<p>在弹出页面中，点击下方蓝色的“BibTex”。</p>
<figure data-type="image" tabindex="25"><img src="https://i.loli.net/2019/01/19/5c41fb4a7cd6e.png?imageView2/2/w/1120/q/40/interlace/1/ignore-error/1" alt="img" loading="lazy"></figure>
<p>如上图所示，该文献的Bibtex信息就是这样的一段文本。我们将其拷贝下来，存储到<code>.bib</code>文件里。</p>
<p>依此类推，我们再下载其他两份文献的Bibtex信息。</p>
<p>你可以打开演示目录内的<code>myref.bib</code>文件查看，内容如下图所示：</p>
<figure data-type="image" tabindex="26"><img src="https://i.loli.net/2019/01/19/5c41fb4ce2312.jpg?imageView2/2/w/1120/q/40/interlace/1/ignore-error/1" alt="img" loading="lazy"></figure>
<p>下面我们就要引用这些文献了。</p>
<p>打开demo-citation.md。</p>
<figure data-type="image" tabindex="27"><img src="https://i.loli.net/2019/01/19/5c41fb4f75ac5.jpg?imageView2/2/w/1120/q/40/interlace/1/ignore-error/1" alt="img" loading="lazy"></figure>
<p>引用的时候，我们使用Bibtex中每条文献信息大括号内的第一个字段，前面加上<code>@</code>符号，用方括号扩起来。需要引用多条文献的时候，在方括号内，对不同文献标记用分号区隔。</p>
<p>我们很容易就发现，参考文献的预览信息是不正确的。</p>
<p>下面我们看看Pandoc能否帮助我们将其转换成为正确的Word内容。</p>
<p>注意这次需要使用的参数比较多。因为我们不光需要指定参考文献的格式，还得告诉Pandoc，参考文献数据存储在了哪里（<code>myref.bib</code>）。</p>
<pre><code>pandoc --filter pandoc-citeproc --bibliography=myref.bib --csl=chinese-gb7714-2005-numeric.csl demo-citation.md -o demo-citation.docx
</code></pre>
<p>打开转换后的word，看看效果。</p>
<figure data-type="image" tabindex="28"><img src="https://i.loli.net/2019/01/19/5c41fb5196793.jpg?imageView2/2/w/1120/q/40/interlace/1/ignore-error/1" alt="img" loading="lazy"></figure>
<p>Pandoc正确地帮我们把文献的引用标记信息转换成为了上角标，根据出现的顺序自动编排序号。对于多个文献的引用情况，也做了对应的处理。</p>
<p>参考文献列表呢？</p>
<p>我们翻动页面到文末。</p>
<figure data-type="image" tabindex="29"><img src="https://i.loli.net/2019/01/19/5c41fb5411f97.jpg?imageView2/2/w/1120/q/40/interlace/1/ignore-error/1" alt="img" loading="lazy"></figure>
<p>参考文献列表已经根据GB/T 7714-2015的规范自动生成。</p>
<p>将来无论是对文献引用作增删、移动、修改，都可以通过执行上面的一条命令自动更新。非常方便。</p>
<h1 id="图片引用">图片引用</h1>
<p>写作长篇学术论文（例如毕业论文）时，图片可能会有很多。引用起来如果手动编号，将来插入新的图片，就得手动重排许多后续内容，很麻烦。</p>
<p>下面我们尝试在Markdown里插入图片标题，并且在文中作交叉引用。</p>
<p>请打开<code>demo-figref.md</code>，内容如下：</p>
<figure data-type="image" tabindex="30"><img src="https://i.loli.net/2019/01/19/5c41fb56b763b.jpg?imageView2/2/w/1120/q/40/interlace/1/ignore-error/1" alt="img" loading="lazy"></figure>
<p>注意这里图片使用时，加入了一些新的信息。前面的方括号里面，加上了图标题；后面的大括号，使用<code>#fig:id</code>的方式，加入了图的标记。</p>
<p>引用的时候，采用<code>{@fig:id}</code>的方式，分别引用每个图形。</p>
<p>注意右侧的预览区，图标记都是原封不动显示的。</p>
<p>为了能够让图片引用的时候使用“图”，而不是“Figure”，我们在文件首部插入4行内容：</p>
<pre><code>---
fignos-cleveref: On
fignos-plus-name: 图
…
</code></pre>
<p>预览中，这部分也出现在了文章首部，很难看。</p>
<figure data-type="image" tabindex="31"><img src="https://i.loli.net/2019/01/19/5c41fb65a67d5.jpg?imageView2/2/w/1120/q/40/interlace/1/ignore-error/1" alt="img" loading="lazy"></figure>
<p>我们执行以下的pandoc命令，注意此次加入了图片引用处理要求。</p>
<pre><code>pandoc --filter pandoc-fignos --filter pandoc-citeproc --bibliography=myref.bib --csl=chinese-gb7714-2005-numeric.csl demo-figref.md -o demo-figref.docx
</code></pre>
<p>这次生成的Word里面，图片自动加上了编号。</p>
<figure data-type="image" tabindex="32"><img src="https://i.loli.net/2019/01/19/5c41fb67e288f.jpg?imageView2/2/w/1120/q/40/interlace/1/ignore-error/1" alt="img" loading="lazy"></figure>
<p>第二张图，序号也符合我们的预期。</p>
<figure data-type="image" tabindex="33"><img src="https://i.loli.net/2019/01/19/5c41fb6a235bb.jpg?imageView2/2/w/1120/q/40/interlace/1/ignore-error/1" alt="img" loading="lazy"></figure>
<p>注意，目前这个图片自动编号的功能对于中文支持还有些问题。例如标题中依然显示为“Figure”，而非我们想要的“图”。不过我们只需要调整替换图标题即可，所有的引用都是正常的。</p>
<p>如果你的学术论文里面有数十或上百张图片，你会立即体会到这种引用方式的好处。</p>
<h1 id="小结">小结</h1>
<p>本文我们用一个最小化的样例，介绍了如何在学术论文写作时，利用Markdown和Pandoc处理以下格式信息：</p>
<ul>
<li>数学公式；</li>
<li>脚注；</li>
<li>文献引用；</li>
<li>图片引用。</li>
</ul>
<p>此时再来看我们生成的Word文稿，已经变成了这个样子：</p>
<figure data-type="image" tabindex="34"><img src="https://i.loli.net/2019/01/19/5c41fb6c9049f.jpg?imageView2/2/w/1120/q/40/interlace/1/ignore-error/1" alt="img" loading="lazy"></figure>
<p>是不是很有成就感呢？</p>
<p>举一反三，你也可以把这些技巧和方法应用于其他学术文稿的写作中，它们包括而不限于开题报告、结项报告，甚至是科研项目申请书。</p>
<p>希望这些展示，能对你写作学术文稿效率的提升，起到促进作用。</p>
<h1 id="讨论">讨论</h1>
<p>你平时经常写学术论文吗？用的是什么工具？效率如何？除了本文介绍的方法外，有没有更好的工具和流程推荐给大家？欢迎留言，分享你的思考和经验，我们一起交流讨论。</p>
<p>如果你对我的文章感兴趣，欢迎点赞，并且关注我的专栏，以便收到后续作品更新通知。</p>
<p>如果本文可能对你身边的亲友有帮助，也欢迎你把本文通过微博或朋友圈分享给他们。让他们一起参与到我们的讨论中来。本文用简明的样例，介绍如何使用Markdown和自动化工具帮你处理数学公式、参考文献引用、图片交叉索引等学术论文写作中常见的棘手问题。快来试试吧。</p>
<h1 id="我说">我说</h1>
<p>文章较长，但是脉络比较清晰。</p>
<p>值得一提的是，可以简单的使用 <strong>typora</strong>，对新手更友好，且直接支持 <strong>pandoc</strong>。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[如何同步一个 fork]]></title>
        <id>https://iTb2b.github.io/post/ru-he-tong-bu-yi-ge-fork/</id>
        <link href="https://iTb2b.github.io/post/ru-he-tong-bu-yi-ge-fork/">
        </link>
        <updated>2020-05-15T15:32:26.000Z</updated>
        <content type="html"><![CDATA[<blockquote>
<p>自己 fork 了别人的 project 之后，当别人更新了，怎么再同步</p>
</blockquote>
<h2 id="具体方法">具体方法</h2>
<h3 id="configuring-a-remote-for-a-fork">Configuring a remote for a fork</h3>
<ul>
<li>给 fork 配置一个 remote</li>
<li>主要使用 <code>git remote -v</code> 查看远程状态。</li>
</ul>
<pre><code>git remote -v
# origin  https://github.com/YOUR_USERNAME/YOUR_FORK.git (fetch)
# origin  https://github.com/YOUR_USERNAME/YOUR_FORK.git (push)
</code></pre>
<ul>
<li>添加一个将被同步给 fork 远程的上游仓库</li>
</ul>
<pre><code>git remote add upstream https://github.com/ORIGINAL_OWNER/ORIGINAL_REPOSITORY.git
</code></pre>
<ul>
<li>删除这个 upstream 以添加新的时</li>
</ul>
<pre><code>git remote rm upstream
</code></pre>
<ul>
<li>再次查看状态确认是否配置成功。</li>
</ul>
<pre><code>git remote -v
# origin    https://github.com/YOUR_USERNAME/YOUR_FORK.git (fetch)
# origin    https://github.com/YOUR_USERNAME/YOUR_FORK.git (push)
# upstream  https://github.com/ORIGINAL_OWNER/ORIGINAL_REPOSITORY.git (fetch)
# upstream  https://github.com/ORIGINAL_OWNER/ORIGINAL_REPOSITORY.git (push)
</code></pre>
<h3 id="syncing-a-fork">Syncing a fork</h3>
<ul>
<li>从上游仓库 fetch 分支和提交点，传送到本地，并会被存储在一个本地分支 upstream/master<br>
<code>git fetch upstream</code></li>
</ul>
<pre><code>git fetch upstream
# remote: Counting objects: 75, done.
# remote: Compressing objects: 100% (53/53), done.
# remote: Total 62 (delta 27), reused 44 (delta 9)
# Unpacking objects: 100% (62/62), done.
# From https://github.com/ORIGINAL_OWNER/ORIGINAL_REPOSITORY
#  * [new branch]      master     -&gt; upstream/master
</code></pre>
<ul>
<li>切换到本地主分支(如果不在的话)<br>
<code>git checkout master</code></li>
</ul>
<pre><code>git checkout master
# Switched to branch 'master'
</code></pre>
<ul>
<li>把 upstream/master 分支合并到本地 master 上，这样就完成了同步，并且不会丢掉本地修改的内容。<br>
<code>git merge upstream/master</code></li>
</ul>
<pre><code>git merge upstream/master
# Updating a422352..5fdff0f
# Fast-forward
#  README                    |    9 -------
#  README.md                 |    7 ++++++
#  2 files changed, 7 insertions(+), 9 deletions(-)
#  delete mode 100644 README
#  create mode 100644 README.md
</code></pre>
<ul>
<li>如果想更新到 GitHub 的 fork 上，直接 <code>git push origin master</code> 就好了。</li>
</ul>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[一日一技 05132020]]></title>
        <id>https://iTb2b.github.io/post/yi-ri-yi-ji-05132020/</id>
        <link href="https://iTb2b.github.io/post/yi-ri-yi-ji-05132020/">
        </link>
        <updated>2020-05-13T11:32:42.000Z</updated>
        <content type="html"><![CDATA[<blockquote>
<p>我真傻……</p>
</blockquote>
<h2 id="pdf-保存">PDF 保存</h2>
<p>我一直是用 Safari 截图后，利用自带的截图转 PDF 功能，然后再导入到 marginnote。</p>
<p>确实是方便快捷，但是，这获得的是一整页 PDF，也就是说，无论原来的网页多长，最后都只会得到一页</p>
<p>这样的 PDF 十分狭长，不好读。</p>
<p>前几天乘着限免，下载了一个 PDF 工具，可以把网页转为 PDF，当然，这就没办法像 Safari 一样，用阅读模式除去烦人的广告，不过它起码是分页的了。</p>
<p>今天完成工作后，偶然想起这件事，便查了下有没有办法，在 macOS 上把网页保存为 PDF</p>
<p>我看到了<strong>少数派</strong></p>
<p>文章是 17 年的了，但现在依然有用，利用了 Safari 原有的导出为 PDF 功能。</p>
<p><a href="https://sspai.com/post/38686">详情点击</a></p>
<p>再然后，末尾写了 <a href="https://sspai.com/post/38749">在 iPhone 上</a></p>
<p>简而言之，就是利用了打印功能，于我，可以先在 Safari 上打开 <strong>阅读视图</strong> ，这样就消除了广告，顺便排了版</p>
<p>再点击页面下方的<strong>分享</strong>按钮，选择打印。有 <strong>3d-touch</strong> 的直接长按，没有的就对准随便一个页面，双指向外撑开，就能看到分享页面了，保存到 MN 中即可，十分方便。</p>
<p>简直救我于水火之中</p>
<p>我一直思考如何把超长的一页 PDF 分割成 A4 纸大小，却忘记了从源头改变一下想法。</p>
<h2 id="apple-music-导入资料库">Apple Music 导入资料库</h2>
<p>一直苦于苹果自带的音乐找不到想要听的音乐，版权实在太少，要不就是只在 iTunes 发售。</p>
<p>前几日想起了之前逛的论坛 <a href="https://www.tsdm.live/forum.php">天使动漫</a> ，记得里面有很多别人买来分享的正版歌曲，音质方面当然有保证</p>
<p>看了一下，甚至有 iTunes 自购分区。</p>
<p>查了查怎么用 Apple music 导入，同步，其实还是很方便的，点这个 <a href="https://zhuanlan.zhihu.com/p/134184993">与 Apple Music 一同优雅地享受音乐</a>。而且正版音乐自带歌手信息、专辑封面</p>
<p>对我这个整理癖来说，十分满足</p>
<figure data-type="image" tabindex="1"><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1ger2jwkf7lj31100n419k.jpg" alt="整理好的 Apple Music" loading="lazy"></figure>
<p><a href="https://sspai.com/post/40732">这个留作以后看</a> <s>(我一定会看的)</s></p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[咖啡]]></title>
        <id>https://iTb2b.github.io/post/ka-pei/</id>
        <link href="https://iTb2b.github.io/post/ka-pei/">
        </link>
        <updated>2020-05-07T10:50:47.000Z</updated>
        <content type="html"><![CDATA[<p>最近买了一堆挂耳咖啡回来，因为没有条件现磨，也不想喝速溶，无意之中发现了这么个宝贝</p>
<p>撕开包装，浓郁的咖啡豆的香气塞满了我的鼻腔</p>
<p>将里面的小包取出，再撕开上部的封条</p>
<p>小包里装的是被磨成粉末的咖啡粉</p>
<p>把它挂在杯子上（没有咖啡杯）</p>
<p>量取 150ml 左右的热水，轻轻倒在表面</p>
<p>这一步，据懂行的说，叫<strong>闷蒸</strong></p>
<p>咱也不懂，照做就是</p>
<p>约莫等了大概 30s ，再分批、缓缓注入剩下的水</p>
<p>没有手冲壶，找了根细长的棒做引流</p>
<figure data-type="image" tabindex="1"><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1gek2m228w9j308c07it8w.jpg" alt="这个就是手冲壶" loading="lazy"></figure>
<p>拿着实验室学来的过滤引水的方法，让水淹没咖啡粉</p>
<p>在水下降到一半时，再次注入</p>
<p>听着滴滴答答液体下落的声音，嗅着不习惯的香气</p>
<p>有时还会忘记加水</p>
<img src="https://tva1.sinaimg.cn/large/007S8ZIlly1gek2rk6ztrj30uu0u0kjl.jpg" alt="油脂浮在表面" style="zoom:50%;" />
<p>结束之后，扔掉没用的滤包，仅供使用一次</p>
<p>嘬一口，还行，不苦</p>
<p>再嘬一口，有点意思，有一种不是咖啡的味道</p>
<p>看看包装——“蓝山风味”</p>
<p>那就姑且把这种味道叫<strong>蓝山</strong>好了</p>
<p>尝尝咖啡也就是图个新鲜，或许也会喜欢上</p>
<p>但毕竟老是喝四十多的星巴克容易成为阶级敌人</p>
<p>当然，也容易成为我自己的敌人</p>
<p>挂耳还是方便，或许比不上手冲那么新鲜，但总比速溶来得健康</p>
<p>我喝不出什么花样，更喝不出“大师，我悟了”的感受</p>
<p>就是杯饮料，罢了</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[What is velocity gradient?]]></title>
        <id>https://iTb2b.github.io/post/what-is-velocity-gradient/</id>
        <link href="https://iTb2b.github.io/post/what-is-velocity-gradient/">
        </link>
        <updated>2020-05-04T15:30:44.000Z</updated>
        <content type="html"><![CDATA[<blockquote>
<p><a href="https://qr.ae/pNr0OO">Quora</a></p>
</blockquote>
<p>When you talk about RATE that means we are talking about how the physical quantity changes with time. For example: rate of change of displacement is called velocity.</p>
<p>In the same way if we are talking about gradient that means how the physical quantity varies with distance. For example : potential gradient gives you Vector field.</p>
<p>So in your case velocity gradient means how is the magnitude of velocity varies with distance. For example: when fluid is flowing through a pipe velocity of each layer is defined from the axis of cylindrical pipe. So velocity of fluid at axial point us max and if you move from axis to surface then velocity of the layer decreases .</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Github 如何维护别人的项目]]></title>
        <id>https://iTb2b.github.io/post/github-ru-he-wei-hu-bie-ren-de-xiang-mu/</id>
        <link href="https://iTb2b.github.io/post/github-ru-he-wei-hu-bie-ren-de-xiang-mu/">
        </link>
        <updated>2020-04-30T05:00:38.000Z</updated>
        <content type="html"><![CDATA[<blockquote>
<p><a href="https://www.jianshu.com/p/00cf29d2d66c">原文地址</a></p>
</blockquote>
<h5 id="git操作">Git操作</h5>
<ul>
<li>
<p><code>fork</code>一下：首先在项目主页上点击<code>Fork</code>，然后你的<code>github</code>主页上就会多一个项目仓库。</p>
</li>
<li>
<p><code>git clone</code>:这个项目到本地。要修改别人的项目当然要下载到本地拉。</p>
</li>
<li>
<p>修改代码，完善功能。</p>
</li>
<li>
<p><code>git status</code>:检查一下改动了那些文件，如果有需要忽略或者增加<code>track</code>的文件，就<code>git add</code>,或者编辑<code>vi .gitignore</code>文件，这个文件的语法在文件里面写的很清除，此处省略。</p>
<ul>
<li>
<p>编辑完<code>.gitignore</code>文件后，用<code>git status</code>检查一下，如果没有变化，就是缓存没有清除，使用这个命令:</p>
<p><code>git rm -r --cached .</code>,之后<code>git status</code>。</p>
</li>
</ul>
</li>
<li>
<p><code>git commit -a -m &quot;Add:balabalabala&quot;</code>:提交更改，<code>-a</code>命令，只提交改动，<code>-m</code>改动说明，说明格式建议如下：</p>
</li>
</ul>
<pre><code class="language-shell">Mod: remove unused code, 表示修改（Modify）
Add: a new module to have faster process, 表示新增（Add）
Rem: deprecate unused modules, 表示移除（Remove）
Ref: improved the implementation of module X, 表示重构（Refactory）
</code></pre>
<ul>
<li>
<p><code>git push -u origin master</code>：提交到远程仓库，至此终端上的操作完成。进入<code>github</code>网页操作。</p>
</li>
<li>
<p>进入自己的主页，选择这个fork的项目，然后点击</p>
<p>进入<code>pull request</code>页面，确认提交的更改，确认无误后，开始填写说明。</p>
<figure data-type="image" tabindex="1"><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1gebplse9a8j308l01l0sj.jpg" alt="img" loading="lazy"></figure>
</li>
<li>
<p>如下，点击<code>create pull request</code>来填写说明</p>
<figure data-type="image" tabindex="2"><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1gebpmcexirj30sc074wez.jpg" alt="img" loading="lazy"></figure>
</li>
<li></li>
</ul>
  <img src="https://tva1.sinaimg.cn/large/007S8ZIlly1gebpmox9rqj30qw0gldgm.jpg" alt="img" style="zoom:67%;" />]]></content>
    </entry>
</feed>